SED
    $sed 's/unix/linux/' geekfile.txt   to replace  1st occurence of unix in every line with linux
    $sed 's/unix/linux/n' geekfile.txt  to replace  nth occurence of unix in every line with linux
    $sed 's/unix/linux/g' geekfile.txt  to replace all occurences of unix in every line with linux
    $sed 's/unix/linux/3g' geekfile.txt  to replace all occurences from nth of unix in every line with linux
    \(...\) would capture the characters specified inside of the parens and \1 would be used to reference the first match, this is a part of regex.
    can work with only brackets Also
    If two captures inside brackets then use \2 for second capture
    \b marks the end of word 
    $ echo "Welcome To The Geek Stuff" | sed 's/\(\b[A-Z]\)/\(\1\)/g'  prints (W)elcome (T)o (T)he (G)eek (S)tuff
    echo "Welcome To The Geek Stuff" | sed 's/\(\b[A-Z]\)/(\1\)/g'     prints (W)elcome (T)o (T)he (G)eek (S)tuff
    $sed '3 s/unix/linux/g' geekfile.txt    replce unix with linux on line 3
    $sed 's/unix/linux/p' geekfile.txt    prints replaces twice if line is not replaced then printed only once
    $sed -n 's/unix/linux/p' geekfile.txt  displays only replaced lines not the duplicate ones
    $sed '1,3 s/unix/linux/' geekfile.txt    change on a range of lines
    $ sed 'nd' filename.txt                  deletes line n from the file
    $ sed '$d' filename.txt                  deletes last line
    $ sed '3,6d' filename.txt  deletes lines from 3 to 6
    $ sed '/pattern/d' filename.txt    deletes lines with matching patterns

    $sed -n '/root/p' /etc/passwd  print or show any matching lines from /etc/passwd file
    sed '2p' /etc/passwd  sed '1,5p' /etc/passwd     print second or range of line
    sed -n -e '/BROWN/,/GREEN/p' colours.txt   print a block of data starting with BROWN and ending with GREEN
    sed -n '/GREEN/,$p' colours.txt     print from GREEN to end of file

PROBLEM 3
   (1) sed 's/ernet.in/ac.in/g' email_old.txt > email_new.txt

	(2)  sed 's/\bpublic\b/private/g' QuizProgram.java > QuizProgram_new.java
		\bpublic\b (\b will match the exact word)

	(3)  sed 's/!*!/./g' msg.txt > new_msg.txt
			!*! will take all the exclamations starting with and ending with '!'

		OR
			sed 's/!\+/./g' msg.txt 	('\' we need to incarcinate the special meaning of '+', whereas we don't need to do that in * or ?)
		OR
			sed -r 's/!+/.g/' msg.txt
			(sed -r is like egrep)

	(4) sed -r 's/(\b[^ ]*\b) (\b[0-2][0-9]\b|\b3[0-1]\b), (\b[0-9]{4}\b)/\2 \1 \3/g' appointment.txt
		
		or you can also do sed -E
    
    (5)
        sed -n '/This/!p' hello.txt   
    
    (6)
        (a)    sed -n '2,4 p' comm_ind_wi_day3.txt   if line numbers are known
                sed -n '/10.5/,/10.3/p' comm_ind_wi_day3.txt  if line numbers not known
        
        (b)
            sed -n '2,4 !p' comm_ind_wi_day3.txt   if line numbers are known
            sed -n '/10.5/,/10.3/!p' comm_ind_wi_day3.txt  if line numbers not known
        
        (c)
            sed -n '5p' comm_ind_wi_day3.txt
        
        
        (d)
            sed -n '2,8 p' comm_ind_wi_day3.txt 

        
        (e)
            sed -n '$p' comm_ind_wi_day3.txt

        (f)
             sed -n '9,$p' comm_ind_wi_day3.txt 

        (g)
            sed  '9,11 s/Ashwin/Jadeja/g' comm_ind_wi_day3.txt 

    (7)
        sed 's/I/We/2g' msg.txt 

    (8)
        sed  -r 's/(\b[0-9]{9}\b)(|\t)([^0-9]*)( |\t)(\b[0-9]{2}\b)/Roll: \1   Name: \3    Age:\5/g' sed_practise.txt 
        use ( |\t) if space or tab is given 

    (9)
        sed 's/1/one/g; s/2/two/g; s/3/three/g' digit_word.txt

    (10)
        sed '/[a,i,e,o,u,A,E,I,O,U]/d' vowel_fav.txt

    (11)
	sed -z 's/\n/@/g' mobile_reviews.txt | sed -e 's/Apple iphone/samsungs8/5' -e 's/Apple iphone/samsungs8/3' | sed 's/@/\n/g' 

    (12)
        sed 's/@[0-9]/@/g' digit.txt 

